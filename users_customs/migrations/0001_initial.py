# Generated by Django 3.2.9 on 2021-11-21 16:56

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomDepartments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_departments', models.CharField(max_length=30, verbose_name='Name of departments')),
                ('reduction_name_departments', models.CharField(blank=True, help_text='Enter reduction of name department', max_length=30, verbose_name='Reduction name of departments')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name_departments'],
            },
        ),
        migrations.CreateModel(
            name='CustomGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_custom_group', models.CharField(help_text='Enter name of custom group', max_length=30, verbose_name='Name of custom group')),
                ('reduction_name_group', models.CharField(blank=True, help_text='Enter reduction of custom group', max_length=30, verbose_name='Reduction of custom group')),
            ],
            options={
                'verbose_name': 'Custom group',
                'verbose_name_plural': "Custom group's",
                'ordering': ['name_custom_group'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(help_text='Enter email address', max_length=254, unique=True, verbose_name='Email Address')),
                ('last_name', models.CharField(help_text='Enter last name', max_length=30, verbose_name='Last name')),
                ('first_name', models.CharField(help_text='Enter first name', max_length=30, verbose_name='First name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date joined')),
                ('date_register', models.DateTimeField(auto_now_add=True, verbose_name='Date register')),
                ('date_edit_user', models.DateTimeField(auto_now=True, verbose_name='Date edit user')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active user')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Access to admin site')),
                ('local_telephone', models.CharField(max_length=20, verbose_name='Telephone number')),
                ('room', models.CharField(max_length=10, verbose_name='Room number')),
                ('ip', models.GenericIPAddressField(default='0.0.0.0', verbose_name='Ip-address')),
                ('custom_group', models.ManyToManyField(to='users_customs.CustomGroup', verbose_name='Custom groups')),
                ('department', models.ForeignKey(blank=True, help_text='Choice department', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users_customs.customdepartments', verbose_name='Department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['date_register'],
            },
        ),
    ]
